const mysql = require('mysql2/promise');
require('dotenv').config();

async function resetDatabase() {
  const connection = await mysql.createConnection({
    host: process.env.DB_HOST,
    port: parseInt(process.env.DB_PORT || '3306'),
    user: process.env.DB_USERNAME,
    password: process.env.DB_PASSWORD,
    database: process.env.DB_DATABASE,
    ssl: {
      rejectUnauthorized: false
    }
  });

  try {
    console.log('üóëÔ∏è –û—á–∏—â–µ–Ω–Ω—è –ë–î...');
    
    // –í–∏–º–∏–∫–∞—î–º–æ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É –∑–æ–≤–Ω—ñ—à–Ω—ñ—Ö –∫–ª—é—á—ñ–≤
    await connection.execute('SET FOREIGN_KEY_CHECKS = 0');
    
    // –î—Ä–æ–ø–∞—î–º–æ –≤—Å—ñ —Ç–∞–±–ª–∏—Ü—ñ
    const tables = ['reviews', 'bids', 'projects', 'users'];
    for (const table of tables) {
      try {
        await connection.execute(`DROP TABLE IF EXISTS \`${table}\``);
        console.log(`‚úÖ –¢–∞–±–ª–∏—Ü—è ${table} –≤–∏–¥–∞–ª–µ–Ω–∞`);
      } catch (error) {
        console.log(`‚ö†Ô∏è –¢–∞–±–ª–∏—Ü—è ${table} –Ω–µ —ñ—Å–Ω—É–≤–∞–ª–∞`);
      }
    }
    
    // –í–º–∏–∫–∞—î–º–æ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É –∑–æ–≤–Ω—ñ—à–Ω—ñ—Ö –∫–ª—é—á—ñ–≤
    await connection.execute('SET FOREIGN_KEY_CHECKS = 1');
    
    console.log('‚úÖ –ë–î –æ—á–∏—â–µ–Ω–∞ —É—Å–ø—ñ—à–Ω–æ!');

  } catch (error) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞:', error);
  } finally {
    await connection.end();
  }
}

resetDatabase();